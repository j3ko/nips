name: generate-dependencies-diagram

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Graphviz
      run: sudo apt-get install -y graphviz

    - name: Generate dependencies diagram
      run: |
        pydeps ./ --exclude=tests --ignore=setup.py --max-bacon=2 --file-output=dependencies.dot
        dot -Tpng -o./dist/dependencies.png ./dependencies.dot
      working-directory: ${{github.workspace}}

    - name: Upload diagram artifact
      uses: actions/upload-artifact@v2
      with:
        name: dependencies-diagram
        path: dist/dependencies.png

    - name: Comment on PR with dependencies diagram
      uses: actions/github-script@v4
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { data } = await context.github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          const commentBody = `![Dependencies diagram](https://github.com/${context.repo.owner}/${context.repo.repo}/raw/${context.sha}/dist/dependencies.png?raw=true)`;
          const { data: comments } = await context.github.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number
          });
          const existingComment = comments.find((comment) => comment.user.login === 'github-actions[bot]' && comment.body.startsWith('![Dependencies diagram]('));
          if (existingComment) {
            await context.github.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            await context.github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: commentBody
            });
          }
